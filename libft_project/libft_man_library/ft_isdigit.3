.TH FT_ISDIGIT 3 "November 2023" "42 School" "42 Manual"
.SH NAME
ft_isdigit \- check for a digit (0 through 9)
.SH SYNOPSIS
.B #include "libft.h"
.br
int ft_isdigit(int c);
.SH DESCRIPTION
The
.B ft_isdigit
function checks if the character passed to it, represented by
.I c,
is a numeric digit (0 through 9). This function specifically checks if the character falls within the ASCII range for digits, which is 48 ('0') to 57 ('9').
.P
The function is a part of the libft library and adheres to the coding standards of 42 School. It provides a custom implementation of the standard C library function
.IR isdigit .
.SH RETURN VALUES
The
.B ft_isdigit
function returns 1 if
.I c
is a digit, and 0 if it is not.
.SH SCHEMATICS
.RS
.nf
+-------------------------+          +-------------------------+
|       Input Value       |          |  ft_isdigit Execution   |
|         (int c)         |          +-------------------------+
+-------------------------+          | 1. Check ASCII range:   |
| ASCII Character: '3'    |          |    Is '3' in 48-57?     |
| Numeric Value: 51       |          |    -> Yes, '3' is 51    |
+-------------------------+          |                         |
          |                          | 2. Return:              |
          v                          |    1 (true) for digit,  |
+-------------------------+          |    0 (false) otherwise  |
|    Function Logic       |          |    -> Final result: 1   |
+-------------------------+          |                         |
|if (c >= '0' && c <= '9')|          |                         |
|     return (1);         |          |                         |
| return (0);             |          |                         |
+-------------------------+          +-------------------------+
.fi
.RE
.SH CODE ANALYSIS
.B ft_isdigit
efficiently checks if the given character
.I c
is within the numeric ASCII range. This method is both simple and effective, ensuring reliable digit recognition.
.SH UNDEFINED BEHAVIOR
There is no undefined behavior for
.B ft_isdigit
as long as the input
.I c
is within the range of characters representable by an
.I int.
Inputs outside the range of '0' to '9' will result in false (0).
.SH SEGMENTATION FAULT PROTECTION
.B ft_isdigit
is not prone to segmentation faults as it operates on a single integer value, avoiding issues related to memory access.
.SH OPTIMIZATION
Given its fundamental nature,
.B ft_isdigit
offers limited scope for optimization. The function's efficiency comes from its straightforward checking mechanism.
.SH SEE ALSO
.IR ft_isalnum(3),
.IR ft_isalpha(3),
.IR ft_isascii(3),
.IR isdigit(3)
.SH AUTHORS
Written by jeportie.

