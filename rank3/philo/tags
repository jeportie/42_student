!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jeportie/Documents/42_student/rank3/philo/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(NAME)	Makefile	/^$(NAME): $(OBJ) $(OBJ_DIR)\/main.o$/;"	t
$(NAME)	make_interface/config/Makefile	/^$(NAME): $(OBJ) $(OBJ_DIR)\/main.o$/;"	t
$(OBJ_DIR)	Makefile	/^$(OBJ_DIR):$/;"	t
$(OBJ_DIR)	make_interface/config/Makefile	/^$(OBJ_DIR):$/;"	t
$(OBJ_DIR)/%.o	Makefile	/^$(OBJ_DIR)\/%.o: $(SRC_DIR)\/%.c | $(OBJ_DIR)$/;"	t
$(OBJ_DIR)/%.o	make_interface/config/Makefile	/^$(OBJ_DIR)\/%.o: $(SRC_DIR)\/%.c | $(OBJ_DIR)$/;"	t
$(OBJ_DIR)/main.o	Makefile	/^$(OBJ_DIR)\/main.o: main.c | $(OBJ_DIR)$/;"	t
$(OBJ_DIR)/main.o	make_interface/config/Makefile	/^$(OBJ_DIR)\/main.o: main.c | $(OBJ_DIR)$/;"	t
%	Makefile	/^%:$/;"	t
%	make_interface/config/Makefile	/^%:$/;"	t
<C-M>	make_interface/config/.vimrc	/^nnoremap <C-M> :bnext<CR>$/;"	m
<C-N>	make_interface/config/.vimrc	/^nnoremap <C-N> :bprev<CR>$/;"	m
<F2>	make_interface/config/.vimrc	/^nnoremap <F2> :NERDTreeToggle<CR>$/;"	m
<F3>	make_interface/config/.vimrc	/^nmap <F3> :TagbarToggle<CR>$/;"	m
<F4>	make_interface/config/.vimrc	/^nnoremap <F4> :Files<CR>$/;"	m
<Leader>cc	make_interface/config/.vimrc	/^nnoremap <Leader>cc :set colorcolumn=80<CR>$/;"	m
<Leader>n	make_interface/config/.vimrc	/^nnoremap <Leader>n :NorminetteRun<CR>$/;"	m
<Leader>ncc	make_interface/config/.vimrc	/^nnoremap <Leader>ncc :set colorcolumn-=80<CR>$/;"	m
<c-h>	make_interface/config/.vimrc	/^nnoremap <c-h> :set hlsearch!<CR>$/;"	m
<leader>L	make_interface/config/.vimrc	/^nnoremap <leader>L :set list!<CR> $/;"	m
<leader>bd	make_interface/config/.vimrc	/^nnoremap <leader>bd :bdelete<CR>$/;"	m
<leader>nr	make_interface/config/.vimrc	/^nnoremap <leader>nr :set norelativenumber<CR>$/;"	m
<leader>r	make_interface/config/.vimrc	/^nnoremap <leader>r :set relativenumber<CR>$/;"	m
<leader>s	make_interface/config/.vimrc	/^nnoremap <leader>s :split<CR>$/;"	m
<leader>t	make_interface/config/.vimrc	/^nnoremap <leader>t :terminal<CR>$/;"	m
<leader>u	make_interface/config/.vimrc	/^nnoremap <leader>u :NERDTreeRefreshRoot<CR>$/;"	m
<leader>vs	make_interface/config/.vimrc	/^nnoremap <leader>vs :vertical split<CR>$/;"	m
<leader>vt	make_interface/config/.vimrc	/^nnoremap <leader>vt :vertical terminal<CR>$/;"	m
Automatic Build Process	make_interface/README.md	/^### Automatic Build Process$/;"	S	section:Make Interface Project""Usage
BAR_WIDTH	make_interface/src/progress.c	/^#define BAR_WIDTH /;"	d	file:
BLUE	Makefile	/^BLUE    = \\033[34m$/;"	m
BLUE	make_interface/config/Makefile	/^BLUE    = \\033[34m$/;"	m
BOLD	Makefile	/^BOLD    = \\033[1m$/;"	m
BOLD	make_interface/config/Makefile	/^BOLD    = \\033[1m$/;"	m
CC	Makefile	/^CC = 		cc$/;"	m
CC	Makefile	/^default: CC = cc$/;"	m
CC	Makefile	/^san: CC = clang$/;"	m
CC	Makefile	/^val: CC = cc$/;"	m
CC	make_interface/config/Makefile	/^CC = 		{{CC}}$/;"	m
CC	make_interface/config/Makefile	/^default: CC = cc$/;"	m
CC	make_interface/config/Makefile	/^san: CC = clang$/;"	m
CC	make_interface/config/Makefile	/^val: CC = cc$/;"	m
CFLAGS	Makefile	/^CFLAGS = 	-Wall -Wextra -Werror -pthread$/;"	m
CFLAGS	make_interface/config/Makefile	/^CFLAGS = 	{{CFLAGS}}$/;"	m
Contributing	make_interface/README.md	/^## Contributing$/;"	s	chapter:Make Interface Project
DEAD	include/philo.h	/^# define DEAD /;"	d
DEBUG	include/philo.h	/^# define DEBUG /;"	d
DEPFLAGS	Makefile	/^DEPFLAGS =  -MMD -MP$/;"	m
DEPFLAGS	make_interface/config/Makefile	/^DEPFLAGS =  -MMD -MP$/;"	m
DEPS	Makefile	/^DEPS = 		$(OBJ:.o=.d)$/;"	m
DEPS	make_interface/config/Makefile	/^DEPS = 		$(OBJ:.o=.d)$/;"	m
Debugging	make_interface/README.md	/^### Debugging$/;"	S	section:Make Interface Project""Usage
DirectoryOfThisScript	ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
DisableNERDTreeForSpecificFiles	make_interface/config/.vimrc	/^function! DisableNERDTreeForSpecificFiles()$/;"	f
EAT	include/philo.h	/^# define EAT /;"	d
EOF	make_interface/config/build.sh	/^    cat <<EOF > "$YCM_EXTRA_CONF"$/;"	h
EVEN	include/philo.h	/^# define EVEN /;"	d
FlagsForFile	ycm_extra_conf.py	/^def FlagsForFile(filename):$/;"	f
GREEN	Makefile	/^GREEN   = \\033[32m$/;"	m
GREEN	include/philo.h	/^# define GREEN /;"	d
GREEN	make_interface/config/Makefile	/^GREEN   = \\033[32m$/;"	m
GREEN	make_interface/src/make_prompt.c	/^#define GREEN /;"	d	file:
HELG	Makefile	/^HELG =      valgrind --tool=helgrind --history-level=full \\$/;"	m
HELG	make_interface/config/Makefile	/^HELG =      valgrind --tool=helgrind --history-level=full \\$/;"	m
INCLUDES	Makefile	/^INCLUDES = $/;"	m
INCLUDES	make_interface/config/Makefile	/^INCLUDES =  {{INCLUDES}} $/;"	m
Installation	make_interface/README.md	/^## Installation$/;"	s	chapter:Make Interface Project
LEFT	include/philo.h	/^# define LEFT /;"	d
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	make_interface/config/Makefile	/^LIBS =		{{LIBS}} $/;"	m
LIB_DIR	Makefile	/^LIB_DIR =	$/;"	m
LIB_DIR	make_interface/config/Makefile	/^LIB_DIR =	{{DIRLIBS}}$/;"	m
License	make_interface/README.md	/^## License$/;"	s	chapter:Make Interface Project
MAX_FILES	make_interface/src/interactive_select.c	/^#define MAX_FILES /;"	d	file:
MAX_SLEEP_USEC	make_interface/src/progress.c	/^#define MAX_SLEEP_USEC /;"	d	file:
MIN_SLEEP_USEC	make_interface/src/progress.c	/^#define MIN_SLEEP_USEC /;"	d	file:
Make Interface Project	make_interface/README.md	/^# Make Interface Project$/;"	c
MakeRelativePathsAbsolute	ycm_extra_conf.py	/^def MakeRelativePathsAbsolute(flags, working_directory):$/;"	f
Makefile Structure	make_interface/README.md	/^## Makefile Structure$/;"	s	chapter:Make Interface Project
NAME	Makefile	/^NAME = philo$/;"	m
NAME	make_interface/config/Makefile	/^NAME = {{NAME}}$/;"	m
NC	make_interface/src/make_prompt.c	/^#define NC /;"	d	file:
NERDTreeMinimalMenu	make_interface/config/.vimrc	/^let NERDTreeMinimalMenu = 1        " Use minimal menu in NERDTree$/;"	v
NERDTreeShowBookmarks	make_interface/config/.vimrc	/^let NERDTreeShowBookmarks = 1      " Show bookmarks in NERDTree$/;"	v
NERDTreeShowHidden	make_interface/config/.vimrc	/^let NERDTreeShowHidden = 1         " Show hidden files in NERDTree$/;"	v
NERDTreeShowLineNumbers	make_interface/config/.vimrc	/^let NERDTreeShowLineNumbers = 0    " Hide line numbers in NERDTree$/;"	v
NERDTreeWinSize	make_interface/config/.vimrc	/^let NERDTreeWinSize = 31           " Set NERDTree panel width$/;"	v
OBJ	Makefile	/^OBJ = 		$(SRC:$(SRC_DIR)\/%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ	make_interface/config/Makefile	/^OBJ = 		$(SRC:$(SRC_DIR)\/%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR = 	obj$/;"	m
OBJ_DIR	make_interface/config/Makefile	/^OBJ_DIR = 	obj$/;"	m
ODD	include/philo.h	/^# define ODD /;"	d
Other Utilities	make_interface/README.md	/^### Other Utilities$/;"	S	section:Make Interface Project""Usage
PHILO_H	include/philo.h	/^# define PHILO_H$/;"	d
Project Overview	make_interface/README.md	/^## Project Overview$/;"	s	chapter:Make Interface Project
RED	Makefile	/^RED     = \\033[31m$/;"	m
RED	include/philo.h	/^# define RED /;"	d
RED	make_interface/config/Makefile	/^RED     = \\033[31m$/;"	m
RED	make_interface/src/make_prompt.c	/^#define RED /;"	d	file:
RESET	Makefile	/^RESET   = \\033[0m$/;"	m
RESET	include/philo.h	/^# define RESET /;"	d
RESET	make_interface/config/Makefile	/^RESET   = \\033[0m$/;"	m
RIGHT	include/philo.h	/^# define RIGHT /;"	d
Running the Make Prompt	make_interface/README.md	/^### Running the Make Prompt$/;"	S	section:Make Interface Project""Usage
SANITIZE	Makefile	/^SANITIZE = 	-g3 -fPIC -fsanitize=thread$/;"	m
SANITIZE	make_interface/config/Makefile	/^SANITIZE = 	-g3 -fPIC -fsanitize=thread$/;"	m
SCRIPT_URL	Makefile	/^SCRIPT_URL = https:\/\/github.com\/jeromeDev94\/make_interface.git$/;"	m
SCRIPT_URL	make_interface/config/Makefile	/^SCRIPT_URL = https:\/\/github.com\/jeromeDev94\/make_interface.git$/;"	m
SLEEP	include/philo.h	/^# define SLEEP /;"	d
SRC	Makefile	/^SRC = \\$/;"	m
SRC	make_interface/config/Makefile	/^SRC =$/;"	m
SRC_DIR	Makefile	/^SRC_DIR = 	src$/;"	m
SRC_DIR	make_interface/config/Makefile	/^SRC_DIR = 	src$/;"	m
STOP	include/philo.h	/^# define STOP /;"	d
THINK	include/philo.h	/^# define THINK /;"	d
TOTAL_STEPS	Makefile	/^TOTAL_STEPS := $(words $(OBJ))$/;"	m
TOTAL_STEPS	make_interface/config/Makefile	/^TOTAL_STEPS := $(words $(OBJ))$/;"	m
Table of Contents	make_interface/README.md	/^## Table of Contents$/;"	s	chapter:Make Interface Project
Targets	make_interface/README.md	/^### Targets$/;"	S	section:Make Interface Project""Makefile Structure
UML Diagram Management	make_interface/README.md	/^### UML Diagram Management$/;"	S	section:Make Interface Project""Usage
Usage	make_interface/README.md	/^## Usage$/;"	s	chapter:Make Interface Project
VALG	Makefile	/^VALG =		valgrind --leak-check=full --show-leak-kinds=all \\$/;"	m
VALG	make_interface/config/Makefile	/^VALG =		valgrind --leak-check=full --show-leak-kinds=all \\$/;"	m
VERBOSE	Makefile	/^VERBOSE ?= @$/;"	m
VERBOSE	Makefile	/^classic: VERBOSE =$/;"	m
VERBOSE	make_interface/config/Makefile	/^VERBOSE ?= @$/;"	m
VERBOSE	make_interface/config/Makefile	/^classic: VERBOSE =$/;"	m
VFLAGS	Makefile	/^VFLAGS = 	-g3 -fPIC $/;"	m
VFLAGS	make_interface/config/Makefile	/^VFLAGS = 	-g3 -fPIC $/;"	m
Variables	make_interface/README.md	/^### Variables$/;"	S	section:Make Interface Project""Makefile Structure
YELLOW	Makefile	/^YELLOW  = \\033[33m$/;"	m
YELLOW	make_interface/config/Makefile	/^YELLOW  = \\033[33m$/;"	m
all	Makefile	/^all: $(NAME)$/;"	t
all	make_interface/config/Makefile	/^all: $(NAME)$/;"	t
bak	make_interface/config/Makefile	/^bak:$/;"	t
build	Makefile	/^build:$/;"	t
build	make_interface/config/Makefile	/^build:$/;"	t
calendar	Makefile	/^calendar: create-cal$/;"	t
calendar	make_interface/config/Makefile	/^calendar: create-cal$/;"	t
classic	Makefile	/^classic: $(NAME)$/;"	t
classic	Makefile	/^classic: VERBOSE =$/;"	t
classic	make_interface/config/Makefile	/^classic: $(NAME)$/;"	t
classic	make_interface/config/Makefile	/^classic: VERBOSE =$/;"	t
clean	Makefile	/^clean:$/;"	t
clean	make_interface/config/Makefile	/^clean:$/;"	t
compilation_database_folder	ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
create-cal	Makefile	/^create-cal:$/;"	t
create-cal	make_interface/config/Makefile	/^create-cal:$/;"	t
create_ycm_extra_conf	make_interface/config/build.sh	/^create_ycm_extra_conf() {$/;"	f
debug	Makefile	/^debug:$/;"	t
debug	make_interface/config/Makefile	/^debug:$/;"	t
default	Makefile	/^default: CC = cc$/;"	t
default	Makefile	/^default: CFLAGS -= $(SANITIZE)$/;"	t
default	Makefile	/^default: CFLAGS -= $(VFLAGS)$/;"	t
default	Makefile	/^default: re$/;"	t
default	make_interface/config/Makefile	/^default: CC = cc$/;"	t
default	make_interface/config/Makefile	/^default: CFLAGS -= $(SANITIZE)$/;"	t
default	make_interface/config/Makefile	/^default: CFLAGS -= $(VFLAGS)$/;"	t
default	make_interface/config/Makefile	/^default: re$/;"	t
display_menu	make_interface/src/interactive_select.c	/^void	display_menu(WINDOW *menu_win, char *choices[], int n_choices, int hl)$/;"	f	typeref:typename:void
download-script	Makefile	/^download-script:$/;"	t
download-script	make_interface/config/Makefile	/^download-script:$/;"	t
end_count	include/philo.h	/^	int			end_count;$/;"	m	struct:s_sync	typeref:typename:int
end_mutex	include/philo.h	/^	t_mtx		end_mutex;$/;"	m	struct:s_sync	typeref:typename:t_mtx
fclean	Makefile	/^fclean: clean$/;"	t
fclean	make_interface/config/Makefile	/^fclean: clean$/;"	t
finish_flag	include/philo.h	/^	bool			finish_flag;$/;"	m	struct:s_philo	typeref:typename:bool
finish_mutex	include/philo.h	/^	t_mtx			finish_mutex;$/;"	m	struct:s_philo	typeref:typename:t_mtx
flags	ycm_extra_conf.py	/^flags = [$/;"	v
fork_mutex	include/philo.h	/^	t_mtx	fork_mutex;$/;"	m	struct:s_forks	typeref:typename:t_mtx
forks	include/philo.h	/^	t_forks		*forks;$/;"	m	struct:s_simu	typeref:typename:t_forks *
ft_actualise_forks	src/forks_2.c	/^void	ft_actualise_forks(t_forks *fork, bool value, int id)$/;"	f	typeref:typename:void
ft_atoi	src/42ft.c	/^int	ft_atoi(const char *nptr)$/;"	f	typeref:typename:int
ft_check_args	src/parsing.c	/^bool	ft_check_args(int ac, char **av)$/;"	f	typeref:typename:bool
ft_check_if_already_finished	src/monitor.c	/^bool	ft_check_if_already_finished(t_philo *philo)$/;"	f	typeref:typename:bool
ft_check_if_dead	src/monitor.c	/^bool	ft_check_if_dead(t_philo *philo)$/;"	f	typeref:typename:bool
ft_check_remaining_locks	src/routine.c	/^void	ft_check_remaining_locks(t_philo *philo)$/;"	f	typeref:typename:void
ft_count_words	make_interface/src/make_prompt.c	/^static size_t	ft_count_words(char *str, char c)$/;"	f	typeref:typename:size_t	file:
ft_define_forks	src/forks_2.c	/^void	ft_define_forks(t_philo *philo, t_forks **fone,$/;"	f	typeref:typename:void
ft_destroy_mutex	src/utilities_2.c	/^void	ft_destroy_mutex(t_simu *simu)$/;"	f	typeref:typename:void
ft_eat	src/actions.c	/^bool	ft_eat(t_philo *philo)$/;"	f	typeref:typename:bool
ft_extract	make_interface/src/make_prompt.c	/^static char	*ft_extract(const char **s, char c, char **tab, size_t i)$/;"	f	typeref:typename:char *	file:
ft_fork_pick	src/forks.c	/^void	ft_fork_pick(t_philo *philo, bool state)$/;"	f	typeref:typename:void
ft_fork_request	src/forks.c	/^bool	ft_fork_request(int philo_id, t_forks *fork)$/;"	f	typeref:typename:bool
ft_free_forks	src/utilities_2.c	/^void	ft_free_forks(t_simu *simu)$/;"	f	typeref:typename:void
ft_free_memory	make_interface/src/make_prompt.c	/^static void	ft_free_memory(char **tab, size_t i)$/;"	f	typeref:typename:void	file:
ft_free_philos	src/utilities_2.c	/^void	ft_free_philos(t_simu *simu)$/;"	f	typeref:typename:void
ft_free_remaining_forks	src/init_2.c	/^static void	ft_free_remaining_forks(int i, t_simu *simu)$/;"	f	typeref:typename:void	file:
ft_get_elapsed_time_us	src/utilities.c	/^static long long	ft_get_elapsed_time_us(t_timeval start, t_timeval end)$/;"	f	typeref:typename:long long	file:
ft_get_time	src/forks.c	/^void	ft_get_time(t_forks *fork, long long *time_left, long long *time_right)$/;"	f	typeref:typename:void
ft_get_time_ms	src/utilities.c	/^long long	ft_get_time_ms(void)$/;"	f	typeref:typename:long long
ft_init_forks	src/init_2.c	/^bool	ft_init_forks(t_simu *simu)$/;"	f	typeref:typename:bool
ft_init_monitor	src/init.c	/^void	ft_init_monitor(t_simu *simu)$/;"	f	typeref:typename:void
ft_init_mtdata	src/init.c	/^bool	ft_init_mtdata(t_simu *simu)$/;"	f	typeref:typename:bool
ft_init_philos	src/init.c	/^bool	ft_init_philos(t_simu *simu)$/;"	f	typeref:typename:bool
ft_init_rdonly	src/init.c	/^bool	ft_init_rdonly(t_simu *simu, int ac, char **av)$/;"	f	typeref:typename:bool
ft_init_threads	src/init_2.c	/^bool	ft_init_threads(t_simu *simu)$/;"	f	typeref:typename:bool
ft_is_int	src/parsing.c	/^bool	ft_is_int(char *nptr)$/;"	f	typeref:typename:bool
ft_is_int_help	src/parsing.c	/^static bool	ft_is_int_help(char *nptr, int i, int sign, int len)$/;"	f	typeref:typename:bool	file:
ft_isdigit	src/42ft.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_issign	src/42ft.c	/^int	ft_issign(int c, int *sign)$/;"	f	typeref:typename:int
ft_isspace	src/42ft.c	/^int	ft_isspace(int c)$/;"	f	typeref:typename:int
ft_join_remaining_threads	src/init_2.c	/^static void	ft_join_remaining_threads(int i, t_simu *simu)$/;"	f	typeref:typename:void	file:
ft_link	src/init.c	/^static void	ft_link(t_simu *simu, t_philo *philo, int i)$/;"	f	typeref:typename:void	file:
ft_links_init	src/safe_init.c	/^void	ft_links_init(t_simu *simu)$/;"	f	typeref:typename:void
ft_mon_routine	src/monitor.c	/^static bool	ft_mon_routine(t_monitor *mon)$/;"	f	typeref:typename:bool	file:
ft_monitor	src/monitor.c	/^void	*ft_monitor(void *arg)$/;"	f	typeref:typename:void *
ft_one_philo_case	src/routine.c	/^static bool	ft_one_philo_case(t_philo *philo)$/;"	f	typeref:typename:bool	file:
ft_perror	src/utilities_2.c	/^void	ft_perror(char *str)$/;"	f	typeref:typename:void
ft_pick_up_forks	src/actions.c	/^bool	ft_pick_up_forks(t_philo *philo)$/;"	f	typeref:typename:bool
ft_picking_order	src/forks.c	/^static void	ft_picking_order(t_forks *fork, int id)$/;"	f	typeref:typename:void	file:
ft_precise_usleep	src/utilities.c	/^void	ft_precise_usleep(long long usec)$/;"	f	typeref:typename:void
ft_print_format	src/printing.c	/^void	ft_print_format(t_philo *philo, long long time, const char *format)$/;"	f	typeref:typename:void
ft_print_parsing	src/printing.c	/^void	ft_print_parsing(t_simu simu)$/;"	f	typeref:typename:void
ft_print_start_stop	src/printing.c	/^void	ft_print_start_stop(t_simu *simu, bool choice)$/;"	f	typeref:typename:void
ft_print_state	src/printing.c	/^void	ft_print_state(t_philo *philo, int state)$/;"	f	typeref:typename:void
ft_release	src/forks.c	/^void	ft_release(t_philo *philo, bool state)$/;"	f	typeref:typename:void
ft_release_forks	src/actions.c	/^void	ft_release_forks(t_philo *philo)$/;"	f	typeref:typename:void
ft_routine	src/routine.c	/^void	*ft_routine(void *arg)$/;"	f	typeref:typename:void *
ft_safe_simulation_init	src/safe_init.c	/^bool	ft_safe_simulation_init(t_simu *simu, int ac, char **av)$/;"	f	typeref:typename:bool
ft_safe_thread_init	src/safe_init.c	/^bool	ft_safe_thread_init(t_simu *simu)$/;"	f	typeref:typename:bool
ft_simulation_loop	src/actions.c	/^void	ft_simulation_loop(t_philo *philo)$/;"	f	typeref:typename:void
ft_sleep	src/actions.c	/^void	ft_sleep(t_philo *philo)$/;"	f	typeref:typename:void
ft_split	make_interface/src/make_prompt.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_start_simulation	src/simulation.c	/^void	ft_start_simulation(t_simu *simu)$/;"	f	typeref:typename:void
ft_stop_threads	src/utilities_2.c	/^void	ft_stop_threads(t_simu *simu)$/;"	f	typeref:typename:void
ft_strlcpy	make_interface/src/make_prompt.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strncmp	src/42ft.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_substr_len	make_interface/src/make_prompt.c	/^static size_t	ft_substr_len(char *str, char c)$/;"	f	typeref:typename:size_t	file:
ft_update_meal_time	src/utilities.c	/^void	ft_update_meal_time(t_philo *philo)$/;"	f	typeref:typename:void
ft_wait_for_start	src/utilities.c	/^void	ft_wait_for_start(t_mtx *mutex, bool *start)$/;"	f	typeref:typename:void
ft_wait_for_stop	src/monitor.c	/^void	ft_wait_for_stop(t_mtx *mutex, bool *start)$/;"	f	typeref:typename:void
ft_wait_threads_to_start	src/simulation.c	/^static void	ft_wait_threads_to_start(t_simu *simu)$/;"	f	typeref:typename:void	file:
ft_wait_threads_to_stop	src/simulation.c	/^void	ft_wait_threads_to_stop(t_simu *simu)$/;"	f	typeref:typename:void
fullclean	Makefile	/^fullclean: fclean$/;"	t
fullclean	make_interface/config/Makefile	/^fullclean: fclean$/;"	t
g:AutoPairsShortcutToggle	make_interface/config/.vimrc	/^let g:AutoPairsShortcutToggle = '<C-P>'  " Auto-pairs toggle shortcut$/;"	v
g:NERDTreeHijackNetrw	make_interface/config/.vimrc	/^    let g:NERDTreeHijackNetrw = 0$/;"	v
g:NERDTreeHijackNetrw	make_interface/config/.vimrc	/^  let g:NERDTreeHijackNetrw = 1$/;"	v
g:NERDTreeQuitOnOpen	make_interface/config/.vimrc	/^    let g:NERDTreeQuitOnOpen = 1$/;"	v
g:NERDTreeQuitOnOpen	make_interface/config/.vimrc	/^  let g:NERDTreeQuitOnOpen = 0$/;"	v
g:mail42	make_interface/config/.vimrc	/^let g:mail42 = 'jeportie@student.42.fr'  " 42 email$/;"	v
g:plantuml_executable_script	make_interface/config/.vimrc	/^let g:plantuml_executable_script = "~\/bin\/plantuml.sh"$/;"	v
g:tagbar_autofocus	make_interface/config/.vimrc	/^let g:tagbar_autofocus = 1         " Auto-focus tagbar$/;"	v
g:tagbar_autoshowtag	make_interface/config/.vimrc	/^let g:tagbar_autoshowtag = 1       " Highlight active tag$/;"	v
g:tagbar_position	make_interface/config/.vimrc	/^let g:tagbar_position = 'botright vertical'$/;"	v
g:user42	make_interface/config/.vimrc	/^let g:user42 = 'jeportie'          " 42 username$/;"	v
g:user_emmet_leader_key	make_interface/config/.vimrc	/^let g:user_emmet_leader_key=','     " Emmet leader key$/;"	v
generate_src_list	make_interface/exec/update_makefile.sh	/^generate_src_list() {$/;"	f
get_uml_files	make_interface/src/interactive_select.c	/^void	get_uml_files(char *directory, char *file_list[], int *count)$/;"	f	typeref:typename:void
git	make_interface/config/Makefile	/^git:$/;"	t
go_count	include/philo.h	/^	int			go_count;$/;"	m	struct:s_sync	typeref:typename:int
go_mutex	include/philo.h	/^	t_mtx		go_mutex;$/;"	m	struct:s_sync	typeref:typename:t_mtx
helgrind	Makefile	/^helgrind:$/;"	t
helgrind	make_interface/config/Makefile	/^helgrind:$/;"	t
help	Makefile	/^help:$/;"	t
help	make_interface/config/Makefile	/^help:$/;"	t
id	include/philo.h	/^	int				id;$/;"	m	struct:s_philo	typeref:typename:int
is_locked	include/philo.h	/^	bool	is_locked;$/;"	m	struct:s_forks	typeref:typename:bool
is_locked	include/philo.h	/^	bool	is_locked;$/;"	m	struct:s_pmtx	typeref:typename:bool
last_meal_time	include/philo.h	/^	long long		last_meal_time;$/;"	m	struct:s_philo	typeref:typename:long long
left_fork	include/philo.h	/^	t_forks			*left_fork;$/;"	m	struct:s_philo	typeref:typename:t_forks *
left_philo	include/philo.h	/^	t_philo	*left_philo;$/;"	m	struct:s_forks	typeref:typename:t_philo *
lock_mutex	include/philo.h	/^	t_mtx	lock_mutex;$/;"	m	struct:s_forks	typeref:typename:t_mtx
main	main.c	/^int	main(int ac, char **av)$/;"	f	typeref:typename:int
main	make_interface/src/interactive_select.c	/^int	main(void)$/;"	f	typeref:typename:int
main	make_interface/src/make_prompt.c	/^int	main(void)$/;"	f	typeref:typename:int
main	make_interface/src/progress.c	/^int	main(int argc, char **argv)$/;"	f	typeref:typename:int
meal_mutex	include/philo.h	/^	t_mtx		meal_mutex;$/;"	m	struct:s_sync	typeref:typename:t_mtx
meals_eaten	include/philo.h	/^	int				meals_eaten;$/;"	m	struct:s_philo	typeref:typename:int
monitor	include/philo.h	/^	t_monitor	monitor;$/;"	m	struct:s_simu	typeref:typename:t_monitor
mtdata	include/philo.h	/^	t_sync			*mtdata;$/;"	m	struct:s_monitor	typeref:typename:t_sync *
mtdata	include/philo.h	/^	t_sync			*mtdata;$/;"	m	struct:s_philo	typeref:typename:t_sync *
mtdata	include/philo.h	/^	t_sync		mtdata;$/;"	m	struct:s_simu	typeref:typename:t_sync
mtx_increment_int	src/utilities_3.c	/^void	mtx_increment_int(t_mtx *mutex, int *dest)$/;"	f	typeref:typename:void
mtx_set_llong	src/utilities_3.c	/^void	mtx_set_llong(t_mtx *mutex, long long *dest, long long value)$/;"	f	typeref:typename:void
norm	Makefile	/^norm:$/;"	t
norm	make_interface/config/Makefile	/^norm:$/;"	t
num_meals	include/philo.h	/^	int			num_meals;$/;"	m	struct:s_rdonly	typeref:typename:int
num_philo	include/philo.h	/^	int			num_philo;$/;"	m	struct:s_rdonly	typeref:typename:int
philo_id	include/philo.h	/^	int		philo_id;$/;"	m	struct:s_forks	typeref:typename:int
philos	include/philo.h	/^	t_philo		*philos;$/;"	m	struct:s_simu	typeref:typename:t_philo *
philos_full	include/philo.h	/^	int			philos_full;$/;"	m	struct:s_sync	typeref:typename:int
pmutex	include/philo.h	/^	t_mtx	pmutex;$/;"	m	struct:s_pmtx	typeref:typename:t_mtx
print_mutex	include/philo.h	/^	t_pmtx		print_mutex;$/;"	m	struct:s_sync	typeref:typename:t_pmtx
print_progress	make_interface/src/progress.c	/^void	print_progress(int step, int total)$/;"	f	typeref:typename:void
progressive_sleep	make_interface/src/progress.c	/^void	progressive_sleep(int step, int total)$/;"	f	typeref:typename:void
rdonly	include/philo.h	/^	t_rdonly		*rdonly;$/;"	m	struct:s_monitor	typeref:typename:t_rdonly *
rdonly	include/philo.h	/^	t_rdonly		*rdonly;$/;"	m	struct:s_philo	typeref:typename:t_rdonly *
rdonly	include/philo.h	/^	t_rdonly	rdonly;$/;"	m	struct:s_simu	typeref:typename:t_rdonly
re	Makefile	/^re: fclean all$/;"	t
re	make_interface/config/Makefile	/^re: fclean all$/;"	t
remove_newline	make_interface/src/make_prompt.c	/^void	remove_newline(char *str)$/;"	f	typeref:typename:void
request_mutex	include/philo.h	/^	t_mtx	request_mutex;$/;"	m	struct:s_forks	typeref:typename:t_mtx
right_fork	include/philo.h	/^	t_forks			*right_fork;$/;"	m	struct:s_philo	typeref:typename:t_forks *
right_philo	include/philo.h	/^	t_philo	*right_philo;$/;"	m	struct:s_forks	typeref:typename:t_philo *
run	Makefile	/^run:$/;"	t
run	make_interface/config/Makefile	/^run:$/;"	t
run-prompt	Makefile	/^run-prompt: download-script$/;"	t
run-prompt	make_interface/config/Makefile	/^run-prompt: download-script$/;"	t
run_make_command	make_interface/src/make_prompt.c	/^void run_make_command(char *target, char *args)$/;"	f	typeref:typename:void
s_forks	include/philo.h	/^typedef struct s_forks$/;"	s
s_monitor	include/philo.h	/^typedef struct s_monitor$/;"	s
s_philo	include/philo.h	/^typedef struct s_philo$/;"	s
s_pmtx	include/philo.h	/^typedef struct s_pmtx$/;"	s
s_rdonly	include/philo.h	/^typedef struct s_rdonly$/;"	s
s_simu	include/philo.h	/^typedef struct s_simu$/;"	s
s_sync	include/philo.h	/^typedef struct s_sync$/;"	s
san	Makefile	/^san: CC = clang$/;"	t
san	Makefile	/^san: CFLAGS += $(SANITIZE)$/;"	t
san	Makefile	/^san: CFLAGS -= $(VFLAGS)$/;"	t
san	Makefile	/^san: re$/;"	t
san	make_interface/config/Makefile	/^san: CC = clang$/;"	t
san	make_interface/config/Makefile	/^san: CFLAGS += $(SANITIZE)$/;"	t
san	make_interface/config/Makefile	/^san: CFLAGS -= $(VFLAGS)$/;"	t
san	make_interface/config/Makefile	/^san: re$/;"	t
simu	include/philo.h	/^	t_simu			*simu;$/;"	m	struct:s_monitor	typeref:typename:t_simu *
simu	include/philo.h	/^	t_simu			*simu;$/;"	m	struct:s_philo	typeref:typename:t_simu *
start_flag	include/philo.h	/^	bool		start_flag;$/;"	m	struct:s_sync	typeref:typename:bool
start_mutex	include/philo.h	/^	t_mtx		start_mutex;$/;"	m	struct:s_sync	typeref:typename:t_mtx
start_time	include/philo.h	/^	long long	start_time;$/;"	m	struct:s_rdonly	typeref:typename:long long
stop_flag	include/philo.h	/^	bool		stop_flag;$/;"	m	struct:s_sync	typeref:typename:bool
stop_mutex	include/philo.h	/^	t_mtx		stop_mutex;$/;"	m	struct:s_sync	typeref:typename:t_mtx
t_forks	include/philo.h	/^}				t_forks;$/;"	t	typeref:struct:s_forks
t_monitor	include/philo.h	/^}					t_monitor;$/;"	t	typeref:struct:s_monitor
t_mtx	include/philo.h	/^typedef pthread_mutex_t	t_mtx;$/;"	t	typeref:typename:pthread_mutex_t
t_philo	include/philo.h	/^typedef struct s_philo	t_philo;$/;"	t	typeref:struct:s_philo
t_philo	include/philo.h	/^}					t_philo;$/;"	t	typeref:struct:s_philo
t_pmtx	include/philo.h	/^}				t_pmtx;$/;"	t	typeref:struct:s_pmtx
t_rdonly	include/philo.h	/^typedef struct s_rdonly	t_rdonly;$/;"	t	typeref:struct:s_rdonly
t_rdonly	include/philo.h	/^}				t_rdonly;$/;"	t	typeref:struct:s_rdonly
t_simu	include/philo.h	/^typedef struct s_simu	t_simu;$/;"	t	typeref:struct:s_simu
t_simu	include/philo.h	/^}				t_simu;$/;"	t	typeref:struct:s_simu
t_sync	include/philo.h	/^typedef struct s_sync	t_sync;$/;"	t	typeref:struct:s_sync
t_sync	include/philo.h	/^}				t_sync;$/;"	t	typeref:struct:s_sync
t_timeval	include/philo.h	/^typedef struct timeval	t_timeval;$/;"	t	typeref:struct:timeval
thread	include/philo.h	/^	pthread_t		thread;$/;"	m	struct:s_monitor	typeref:typename:pthread_t
thread	include/philo.h	/^	pthread_t		thread;$/;"	m	struct:s_philo	typeref:typename:pthread_t
time_mutex	include/philo.h	/^	t_mtx			time_mutex;$/;"	m	struct:s_philo	typeref:typename:t_mtx
time_to_die	include/philo.h	/^	int			time_to_die;$/;"	m	struct:s_rdonly	typeref:typename:int
time_to_eat	include/philo.h	/^	int			time_to_eat;$/;"	m	struct:s_rdonly	typeref:typename:int
time_to_sleep	include/philo.h	/^	int			time_to_sleep;$/;"	m	struct:s_rdonly	typeref:typename:int
todo	Makefile	/^todo:$/;"	t
todo	make_interface/config/Makefile	/^todo:$/;"	t
uml	Makefile	/^uml:$/;"	t
uml	make_interface/config/Makefile	/^uml:$/;"	t
update	Makefile	/^update:$/;"	t
update	make_interface/config/Makefile	/^update:$/;"	t
update_makefile	make_interface/config/build.sh	/^update_makefile() {$/;"	f
val	Makefile	/^val: CC = cc$/;"	t
val	Makefile	/^val: CFLAGS += $(VFLAGS) $/;"	t
val	Makefile	/^val: CFLAGS -= $(SANITIZE)$/;"	t
val	Makefile	/^val: re$/;"	t
val	make_interface/config/Makefile	/^val: CC = cc$/;"	t
val	make_interface/config/Makefile	/^val: CFLAGS += $(VFLAGS) $/;"	t
val	make_interface/config/Makefile	/^val: CFLAGS -= $(SANITIZE)$/;"	t
val	make_interface/config/Makefile	/^val: re$/;"	t
valgrind	Makefile	/^valgrind:$/;"	t
valgrind	make_interface/config/Makefile	/^valgrind:$/;"	t
